{

	"manifest": {
		"scope": "Inox",
		"prefix": "manifest",
		"body": [
			"manifest {",
			"\t$1",
			"}"
		],
		"description": "empty manifest"
	},
	"manifest-rw": {
		"scope": "Inox",
		"prefix": "manifest-rw",
		"body": [
			"manifest {",
			"\tread: $1",
			"\twrite: $1",
			"}"
		],
		"description": "empty manifest"
	},
    "includable-chunk": {
		"scope": "Inox",
		"prefix": "includable-chunk",
		"body": [
			"includable-chunk"
		],
		"description": "empty manifest"
	},
    "walk": {
        "scope": "Inox",
		"prefix": "walk",
		"body": [
			"walk $1 entry {",
			"\t$0$2",
			"}"
		],
		"description": "for .. in loop"
    },
	"forin": {
		"scope": "Inox",
		"prefix": "forin",
		"body": [
			"for $1 in $2 {",
			"\t$0$3",
			"}"
		],
		"description": "for .. in loop"
	},
    "for10": {
		"scope": "Inox",
		"prefix": "for10",
		"body": [
			"for (1 .. 10) {",
			"\t$1",
			"}"
		],
		"description": "for (1.. 10) loop"
	},
    "for0n": {
		"scope": "Inox",
		"prefix": "for0n",
		"body": [
			"for (0 .. $1) {",
			"\t$2",
			"}"
		]
	},
    "for1n": {
		"scope": "Inox",
		"prefix": "for1n",
		"body": [
			"for (1 .. $1) {",
			"\t$2",
			"}"
		]
	},
    "1_10": {
		"scope": "Inox",
		"prefix": "1_10",
		"body": [
			"(1 .. 10)"
		]
	},
    "1_n": {
		"scope": "Inox",
		"prefix": "1_n",
		"body": [
			"(1 .. $1)"
		]
	},
    "0_n": {
		"scope": "Inox",
		"prefix": "0_n",
		"body": [
			"(0 .. $1)"
		]
	},
    "switch": {
		"scope": "Inox",
		"prefix": "switch",
		"body": [
			"switch $1 {",
                "\t$2 {",
                "\t\t$3",
                "\t}",
            "}"
		],
		"description": "minimal switch statement"
	},
    "match": {
		"scope": "Inox",
		"prefix": "match",
		"body": [
			"match $1 {",
                "\t$2 {",
                "\t\t$3",
                "\t}",
            "}"
		],
		"description": "minimal match statement"
	},
	"assertmatch": {
		"scope": "Inox",
		"prefix": "assertmatch",
		"body": [
			"assert ($1 match $2)"
		]
	},
    "importincl": {
        "scope": "Inox",
        "prefix": "importincl",
        "body": [
            "import ./$1"
        ]
    },
    "importmod": {
        "scope": "Inox",
        "prefix": "importmod",
        "body": [
            "import res$1 https://$2.ix {",
            "\targuments: {$3}",
            "\tallow: {",
            "\t\t$4",
            "\t}",
            "}"
        ]
    },
    "fn": {
        "scope": "Inox",
        "prefix": "fn",
        "body": [
            "fn($1){",
            "\t$2",
            "}"
        ]
    },
    "if": {
        "scope": "Inox",
        "prefix": "if",
        "body": [
            "if $1 {",
            "\t$2",
            "}"
        ]
    },
    "ifel": {
        "scope": "Inox",
        "prefix": "ifel",
        "body": [
            "if $1 {",
            "\t$2",
            "} else {",
            "\t$3",
            "}"
        ]
    },
	 "ifex": {
        "scope": "Inox",
        "prefix": "ifex",
        "body": [
            "(if $1 $2)"
        ]
    },
    "ifelex": {
        "scope": "Inox",
        "prefix": "ifelex",
        "body": [
            "(if $1 else $2)"
        ]
    },
    "in": {
        "scope": "Inox",
        "prefix": "in",
        "body": [
            "($1 in $2)"
        ]
    },
    "go": {
        "scope": "Inox",
        "prefix": "go",
        "body": [
            "go {globals: .{$1}} do {",
            "\t$2",
            "}"
        ]
    },
	"gogroup": {
        "scope": "Inox",
        "prefix": "gogroup",
        "body": [
			"group = RoutineGroup()",
			"coroutine1 = go {globals: .{$1}} do {",
            "\t",
            "}",
            "coroutine2 = go {globals: .{}} do {",
            "\t",
            "}",
			"results = group.wait_results!()"
        ]
    },
	"union2": {
        "scope": "Inox",
        "prefix": "union2",
        "body": [
            "%| $1 | $2"
        ]
    },
	"union3": {
        "scope": "Inox",
        "prefix": "union3",
        "body": [
            "%| $1 | $2 | $3"
        ]
    },
    "single-file-app/http-file-server": {
        "scope": "Inox",
        "prefix": "single-file-app/http-file-server",
        "body": [
            "const (",
            "\tHOST = https://localhost:9090",
            ")",
            "",
            "manifest {",
            "\tpermissions: {",
            "\t\tprovide: HOST",
            "\t\tread: IWD_PREFIX",
            "\t}",
            "}",
            "",
            "print(\"start HTTP file server on\", HOST)",
            "server = http.FileServer!(HOST, ./)",
            "server.wait_closed()"
        ]
    },
    "html-xml-element": {
        "scope": "Inox",
        "prefix":"<html",
        "body": [
            "<html>",
            "<head>",
            "\t<meta charset=\"utf-8\"/>",
            "\t<title>$1</title>",
            "\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>",
            "</head>",
            "<body>",
            "\t$2",
            "</body>",
            "</html>"
        ]
    }
}
