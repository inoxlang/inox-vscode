{
    "manifest": {
        "scope": "Inox",
        "prefix": "manifest",
        "body": [
            "manifest {",
            "\t$1",
            "}"
        ],
        "description": "empty manifest"
    },
    "manifest-rw": {
        "scope": "Inox",
        "prefix": "manifest-rw",
        "body": [
            "manifest {",
            "\tread: $1",
            "\twrite: $1",
            "}"
        ],
        "description": "empty manifest"
    },
    "includable-file": {
        "scope": "Inox",
        "prefix": "includable-file",
        "body": [
            "includable-file"
        ],
        "description": "empty manifest"
    },
    "preinit": {
        "scope": "Inox",
        "prefix": "preinit",
        "body": [
            "preinit {",
            "\t$1",
            "}"
        ],
        "description": "preinit statement"
    },
    "walk": {
        "scope": "Inox",
        "prefix": "walk",
        "body": [
            "walk $1 entry {",
            "\t$0$2",
            "}"
        ],
        "description": "for .. in loop"
    },
    "for elem in": {
        "scope": "Inox",
        "prefix": "for_elem_in",
        "body": [
            "for ${1:elem} in $2 {",
            "\t$0$3",
            "}"
        ],
        "description": "for .. in loop"
    },
    "for index, elem in": {
        "scope": "Inox",
        "prefix": "for_index_elem_in",
        "body": [
            "for ${1:index}, ${2:elem} in $3 {",
            "\t$0$4",
            "}"
        ],
        "description": "for .. in loop"
    },
    "for i in range": {
        "scope": "Inox",
        "prefix": "for_i_in_range",
        "body": [
            "for ${1:i} in (0 ..< 10) {",
            "\t$0$2",
            "}"
        ],
        "description": "for .. in loop"
    },
    "for (0 ..< 10)": {
        "scope": "Inox",
        "prefix": "for_zero_to_ten_exclusive",
        "body": [
            "for (0 ..< 10) {",
            "\t$0$1",
            "}"
        ],
        "description": "for .. in loop"
    },
    "1_10": {
        "scope": "Inox",
        "prefix": "1_10",
        "body": [
            "(1 .. 10)"
        ]
    },
    "1_n": {
        "scope": "Inox",
        "prefix": "1_n",
        "body": [
            "(1 .. $1)"
        ]
    },
    "0_n": {
        "scope": "Inox",
        "prefix": "0_n",
        "body": [
            "(0 .. $1)"
        ]
    },
    "switch": {
        "scope": "Inox",
        "prefix": "switch",
        "body": [
            "switch $1 {",
            "\t$2 {",
            "\t\t$3",
            "\t}",
            "}"
        ],
        "description": "minimal switch statement"
    },
    "match": {
        "scope": "Inox",
        "prefix": "match",
        "body": [
            "match $1 {",
            "\t$2 {",
            "\t\t$3",
            "\t}",
            "}"
        ],
        "description": "minimal match statement"
    },
    "assertmatch": {
        "scope": "Inox",
        "prefix": "assertmatch",
        "body": [
            "assert ($1 match $2)"
        ]
    },
    "importincl": {
        "scope": "Inox",
        "prefix": "importincl",
        "body": [
            "import ./$1"
        ]
    },
    "importmod": {
        "scope": "Inox",
        "prefix": "importmod",
        "body": [
            "import res$1 https://$2.ix {",
            "\targuments: {$3}",
            "\tallow: {",
            "\t\t$4",
            "\t}",
            "}"
        ]
    },
    "fn": {
        "scope": "Inox",
        "prefix": "fn",
        "body": [
            "fn($1){",
            "\t$2",
            "}"
        ]
    },
    "var": {
        "scope": "Inox",
        "prefix": "var",
        "body": [
            "var "
        ]
    },
    "globalvar": {
        "scope": "Inox",
        "prefix": "globalvar",
        "body": [
            "globalvar "
        ]
    },
    "pattern": {
        "scope": "Inox",
        "prefix": "pattern",
        "body": [
            "pattern "
        ]
    },
    "patterndefinition": {
        "scope": "Inox",
        "prefix": "patterndefinition",
        "body": [
            "pattern ${1:name} = $2"
        ]
    },
    "pnamespacedefinition": {
        "scope": "Inox",
        "prefix": "pnamespacedefinition",
        "body": [
            "pnamespace ${1:mynamespace}. = {",
            "\t${2:mypattern}: %int",
            "}"
        ]
    },
    "if": {
        "scope": "Inox",
        "prefix": "if",
        "body": [
            "if $1 {",
            "\t$2",
            "}"
        ]
    },
    "ifel": {
        "scope": "Inox",
        "prefix": "ifel",
        "body": [
            "if $1 {",
            "\t$2",
            "} else {",
            "\t$3",
            "}"
        ]
    },
    "ifex": {
        "scope": "Inox",
        "prefix": "ifex",
        "body": [
            "(if $1 $2)"
        ]
    },
    "ifelex": {
        "scope": "Inox",
        "prefix": "ifelex",
        "body": [
            "(if $1 else $2)"
        ]
    },
    "in": {
        "scope": "Inox",
        "prefix": "in",
        "body": [
            "($1 in $2)"
        ]
    },
    "go": {
        "scope": "Inox",
        "prefix": "go",
        "body": [
            "go {globals: .{$1}} do {",
            "\t$2",
            "}"
        ]
    },
    "gogroup": {
        "scope": "Inox",
        "prefix": "gogroup",
        "body": [
            "group = RoutineGroup()",
            "coroutine1 = go {globals: .{$1}} do {",
            "\t",
            "}",
            "coroutine2 = go {globals: .{}} do {",
            "\t",
            "}",
            "results = group.wait_results!()"
        ]
    },
    "union2": {
        "scope": "Inox",
        "prefix": "union2",
        "body": [
            "%| $1 | $2"
        ]
    },
    "union3": {
        "scope": "Inox",
        "prefix": "union3",
        "body": [
            "%| $1 | $2 | $3"
        ]
    },
    "extend": {
        "scope": "Inox",
        "prefix": "extend",
        "body": [
            "extend ${1:pattern_to_extend} {",
            "\t${2:extension_property_or_method}: ",
            "}"
        ]
    },
    "html-xml-element": {
        "scope": "Inox",
        "prefix": "<html",
        "body": [
            "<html>",
            "<head>",
            "\t<meta charset=\"utf-8\"/>",
            "\t<title>$1</title>",
            "\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>",
            "</head>",
            "<body>",
            "\t$2",
            "</body>",
            "</html>"
        ]
    },
    "testsuite": {
        "scope": "Inox",
        "prefix": "testsuite",
        "body": [
            "testsuite({",
            "\tname: \"$1\"",
            "}) {",
            "\t$2",
            "}"
        ]
    },
    "testcasesimple": {
        "scope": "Inox",
        "prefix": "testcase_simple",
        "body": [
            "testcase \"${1:name}\" {",
            "\t$2",
            "}"
        ]
    },
    "testcase": {
        "scope": "Inox",
        "prefix": "testcase",
        "body": [
            "testcase({",
            "\tname: \"$1\"",
            "}) {",
            "\t$2",
            "}"
        ]
    }
}